apiVersion: v1
kind: Namespace
metadata:
  name: eshop
  labels:
    app.kubernetes.io/name: eshop
    app.kubernetes.io/instance: eshop

---
apiVersion: v1
kind: Service
metadata:
  namespace: eshop
  name: eshop-customer-order-api
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    app: eshop-customer-order-api

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: eshop
  name: eshop-customer-order-api-deployment
  labels:
    app: eshop-customer-order-api
spec:
  selector:
    matchLabels:
      app: eshop-customer-order-api
  strategy:
    type: Recreate
  replicas: 1
  template:
    metadata:
      labels:
        app: eshop-customer-order-api
    spec:
      terminationGracePeriodSeconds: 10
      securityContext:
        runAsUser: 1001
        runAsGroup: 0
        fsGroup: 0
      containers:
        - name: eshop-customer-order-api
          image: maxmorev/eshop-customer-order-api:latest
          volumeMounts:
            - name: h2-storage
              mountPath: /opt/micro/h2
          ports:
            - containerPort: 8080
              name: springboot
          resources:
            requests:
              memory: "500Mi"
              cpu: "250m" # 1/4 core
            limits:
              memory: "500Mi"
              cpu: "250m" # 1/2 core
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 90
            timeoutSeconds: 5
            periodSeconds: 3
            failureThreshold: 1
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 100
            timeoutSeconds: 2
            periodSeconds: 8
            failureThreshold: 1
      volumes:
        - name: h2-storage
          persistentVolumeClaim:
            claimName: pvc-customer-order-api